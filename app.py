import os
import openai
import spotipy
import streamlit as st
import json
import requests
from dotenv import load_dotenv

load_dotenv()


@st.cache_data
def get_spotify_client(authorization_code):
    response = requests.post(
        "https://accounts.spotify.com/api/token",
        data={
            "grant_type": "authorization_code",
            "code": authorization_code,
            "redirect_uri": "http://localhost:8502",
            "client_id": os.environ["SPOTIFY_CLIENT_ID"],
            "client_secret": os.environ["SPOTIFY_CLIENT_SECRET"],
        },
        headers={
            "Content-Type": "application/x-www-form-urlencoded",
        },
    )
    return spotipy.Spotify(auth=response.json()["access_token"])


def login_spotify():
    auth_url = f"https://accounts.spotify.com/authorize?client_id={os.environ['SPOTIFY_CLIENT_ID']}&response_type=code&redirect_uri=http://localhost:8502&scope=playlist-modify-private"
    query_param = st.experimental_get_query_params()
    if query_param:
        return query_param["code"][0]
    st.write(
        f"Please log in to <a target='_self' href='{auth_url}'>spotify",
        unsafe_allow_html=True,
    )
    query_param = st.experimental_get_query_params()
    if query_param:
        return query_param["code"][0]


def main():
    openai.api_key = os.environ["OPENAI_API_KEY"]
    chat = openai.ChatCompletion

    authorization_code = login_spotify()
    if not authorization_code:
        return
    spotify_client = get_spotify_client(authorization_code)

    with st.form("Playlist generation"):
        prompt = st.text_input("Describe the music you'd like to hear..")
        song_count = st.slider("Songs", 1, 30, 10)
        submitted = st.form_submit_button("Create")
    if not submitted:
        return

    with st.spinner("Creating playlist.."):
        response = chat.create(
            model="gpt-3.5-turbo-0613",
            temperature=1,
            messages=[
                {
                    "role": "system",
                    "content": "You are MusicGPT, worlds best music recommendation AI. Given a description of a users music preference, you will recommend songs tailored to the users preference.",
                },
                {
                    "role": "user",
                    "content": f"Create a playlist with {song_count} songs that fits the following description: '''{prompt}'''. Come up with a creative and unique name for the playlist.",
                },
            ],
            functions=[
                {
                    "name": "create_playlist",
                    "description": "Creates a spotify playlist based on a list of songs that should be added to the list.",
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "playlist_name": {
                                "type": "string",
                                "description": "Name of playlist",
                            },
                            "playlist_description": {
                                "type": "string",
                                "description": "Description for the playlist. Please add that this playlist was generated by an AI.",
                            },
                            "songs": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "songname": {
                                            "type": "string",
                                            "description": "Name of the song that should be added to the playlist",
                                        },
                                        "artists": {
                                            "type": "array",
                                            "description": "List of all artists",
                                            "items": {
                                                "type": "string",
                                                "description": "Name of artist of the song",
                                            },
                                        },
                                    },
                                    "required": ["songname", "artists"],
                                },
                            },
                        },
                        "required": ["songs", "playlist_name"],
                    },
                }
            ],
        )

        arguments = json.loads(
            response["choices"][0]["message"]["function_call"]["arguments"]
        )
        playlist_name = "AI - " + arguments["playlist_name"]
        playlist_description = arguments["playlist_description"]
        recommended_songs = arguments["songs"]

        song_uris = [
            spotify_client.search(
                q=f"{song['songname']} {','.join(song['artists'])}", limit=1
            )["tracks"]["items"][0]["uri"]
            for song in recommended_songs
        ]

        user_id = spotify_client.me()["id"]
        playlist = spotify_client.user_playlist_create(
            user_id, playlist_name, False, description=playlist_description
        )
        playlist_id = playlist["id"]
        spotify_client.playlist_add_items(playlist_id, song_uris)

    st.write(
        f"Playlist created <a href='{playlist['external_urls']['spotify']}'>Click</a>",
        unsafe_allow_html=True,
    )


if __name__ == "__main__":
    main()
